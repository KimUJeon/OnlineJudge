import math
a, b, v = list(map(int, input().split()))

day = (v-b)/(a-b) 
print(math.ceil(day))

<문제>
땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.
달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.
달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

<입력>
첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)
ex.1) 2 1 5
ex.2) 5 1 6
ex.3) 100 99 1000000000

<출력>
첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.
ex.1) 4
ex.2) 2
ex.3) 999999901


<해설>
[오답은 아니지만 시간초과]
import math
a, b, v = list(map(int, input().split()))

day = 0

remain = v - a
if remain > 0:
    day += 1
    if remain % b == 0:
        day += math.ceil(remain/(a-b))
else:    
    day = 1
    
print(int(day))

해당 문제의 핵심은 150ms 안에 문제 풀이가 완료되어야 한다는 것이다
해설에 나와있는 예시와 같이 코드가 길고 연산자가 많을 수록 오래걸리기 때문에 공포의 "틀렸습니다!!!"가 출력이 된다.

나무의 총 길이에서 밤에 미끄러지는 길이를 미리 뺀 다음 낮에 올라가는 거리와 밤에 미끄러지는 거리를 서로 뺀 거리.
즉, 미리 뺀 거리를 하루동안 순수하게 움직이는 거리로 나누면 위와 같이 짧은 코드가 나오고 소수점을 올림처리 하여 걸리는 날짜를 출력하였다.
