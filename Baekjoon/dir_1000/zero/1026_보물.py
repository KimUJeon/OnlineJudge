N = int(input())
result = 0

A = list(map(int, input().split()))
B = list(map(int, input().split()))

A.sort()


for i in range(N):
    result += A[i] * max(B)
    B.remove(max(B))

print(result)


<문제>
옛날 옛적에 수학이 항상 큰 골칫거리였던 나라가 있었다. 이 나라의 국왕 김지민은 다음과 같은 문제를 내고 큰 상금을 걸었다.
길이가 N인 정수 배열 A와 B가 있다. 다음과 같이 함수 S를 정의하자.
S = A[0]×B[0] + ... + A[N-1]×B[N-1]
S의 값을 가장 작게 만들기 위해 A의 수를 재배열하자. 단, B에 있는 수는 재배열하면 안 된다.
S의 최솟값을 출력하는 프로그램을 작성하시오.

<입력>
첫째 줄에 N이 주어진다. 둘째 줄에는 A에 있는 N개의 수가 순서대로 주어지고, 셋째 줄에는 B에 있는 수가 순서대로 주어진다.
N은 50보다 작거나 같은 자연수이고, A와 B의 각 원소는 100보다 작거나 같은 음이 아닌 정수이다.

<출력>
첫째 줄에 S의 최솟값을 출력한다.

<예제 입력 1>
5
1 1 1 6 0
2 7 8 3 1
<예제 출력 1>
18

<해설>
A와 B를 각각 list와 map을 이용해 리스트를 만듦과 동시에 int 값으로 입력을 받고
sort()함수로 A 값을 오름차순을 만든다. B는 재배열하면 안된다는 조건이 있기 때문에
값이 가장 작게 나올 수 있는 식은 B에서 가장 큰 수와 A를 앞에서부터 차례대로 곱한것을 더하면 가장 작은 결과값이 나오게 된다.
이 부분은 11~12번 라인과 같이 max()함수를 이용해 재배열을 이용하지 않고 식을 완성하였다.
