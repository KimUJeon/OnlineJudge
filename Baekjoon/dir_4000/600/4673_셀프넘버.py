numbers = list(range(1, 10001))
remove_list = []

for num in numbers:
    for n in str(num):
        num += int(n)
    if num <= 10000:
        remove_list.append(num)

for remove_num in set(remove_list):
    numbers.remove(remove_num)
for self_num in numbers:
    print(self_num)




<문제>
셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.
양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), ...과 같은 무한 수열을 만들 수 있다. 
예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.
33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...
n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다.
예를 들어, 101은 생성자가 2개(91과 100) 있다. 
생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97
10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.

<입력>
입력은 없다.

<출력>
1
3
5
7
9
20
31
42
53
64
 |
 |       <-- a lot more numbers
 |
9903
9914
9925
9927
9938
9949
9960
9971
9982
9993


<해설>
numbers 에 1 부터 10001 직전까지 만드는 리스트를 생성하고 셀프 넘버를 구해야 하기 때문에
코드에서 실행되어 출력되는 결과물들을 저장시켜 두는 remove_list 를 빈공간으로 만들어둔다
num 을 문자열화 시켜 해당 숫자의 길이만큼 반복하여 num에 더하도록 해 57의 경우 69가 만들어진다.
그리고 10000까지의 경우만 구하기 때문에 num이 10000이하일 경우 remove_list에 append(num)으로 추가하였다.

출력해야 하는 결과값은 셀프넘버이기 때문에 remove_list 에서 중복되는 값을 set을 통해 제거하고
초기에 만들었던 10000까지의 리스트인 numbers 에서 해당 값들을 제거 한뒤 출력함.
