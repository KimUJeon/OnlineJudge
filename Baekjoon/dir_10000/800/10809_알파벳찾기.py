ans = []
S = str(input())

for i in range(ord('a'), ord('z')+1): # 알파벳 소문자들을 ord() 함수를 통해 아스키코드화 시킴
    ans.append(str(S.find(chr(i)))) # .find() 는 해당 문자를 가장 처음 만나는 지점의 인덱스를 출력함
                                    # 이를 통해 ans 리스트에 저장
print(' '.join(ans))                # 리스트의 요소들을 중간에 ' '(공백) 을 넣어 출력시킴




<문제>
알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서,
단어에 포함되어 있는 경우에는 처음 등장하는 위치를,
포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

<입력>
첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
baekjoon

<출력>
각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.
1 0 -1 -1 2 -1 -1 -1 -1 4 3 -1 -1 7 5 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1

<해설>
해당 문제는 문자를 아스키코드로 변환시키는 ord() 함수를 알고 리스트 요소들을 출력하는 방식인 .join() 을 알고 있으면
쉽게 풀이 할 수 있는 문제다. 주석 참고
